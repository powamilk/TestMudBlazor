@page "/usercreate"
@    using TestBUS.Service.Interface
@    using TestBUS.Service.Interface
@    using TestBUS.ViewModel;
@    using TestBUS.ViewModel.User
@inject IUserService userService
@inject NavigationManager NavigationManager

<style>
    .card {
        margin: 20px auto;
        max-width: 600px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 20px;
    }

    .card-footer {
        text-align: right;
        padding: 10px 20px;
        background-color: #f8f9fa;
        border-top: 1px solid #ddd;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .btn {
        padding: 10px 20px;
        font-size: 14px;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #565e64;
        }
</style>

<h3>Create New User</h3>

<div class="card">
    <div class="card-body">
        <form>
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" class="form-control" @bind="_user.Name" required />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" class="form-control" @bind="_user.Email" required />
            </div>

            <div class="form-group">
                <label for="phoneNumber">Phone Number</label>
                <input type="text" id="phoneNumber" class="form-control" @bind="_user.PhoneNumber" />
            </div>

            <div class="form-group">
                <label for="status">Status</label>
                <select id="status" class="form-control" @bind="_user.Status" required>
                    <option value="active">Active</option>
                    <option value="inactive">Inactive</option>
                    <option value="suspended">Suspended</option>
                </select>
            </div>
        </form>
    </div>

    <div class="card-footer">
        <button class="btn btn-primary" @onclick="SaveUser">Add</button>
        <button class="btn btn-secondary" @onclick="Cancel">Back</button>
    </div>
</div>

@code {
    private UserCreateVM _user = new()
        {
            Status = "active"
        };

    private async Task SaveUser()
    {
        try
        {
            await userService.CreateAsync(_user);
            NavigationManager.NavigateTo("/user");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/user");
    }
}
